<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43;, OpenGL, Python, PyTorch, OpenCV | Hamid Gadirov</title>
    <link>http://localhost:1313/tags/c&#43;&#43;-opengl-python-pytorch-opencv/</link>
      <atom:link href="http://localhost:1313/tags/c++-opengl-python-pytorch-opencv/index.xml" rel="self" type="application/rss+xml" />
    <description>C&#43;&#43;, OpenGL, Python, PyTorch, OpenCV</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Thu, 24 Oct 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu_645fa481986063ef.png</url>
      <title>C&#43;&#43;, OpenGL, Python, PyTorch, OpenCV</title>
      <link>http://localhost:1313/tags/c&#43;&#43;-opengl-python-pytorch-opencv/</link>
    </image>
    
    <item>
      <title>Scientific Visualization</title>
      <link>http://localhost:1313/teaching/python/</link>
      <pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/teaching/python/</guid>
      <description>&lt;h2 id=&#34;course-overview&#34;&gt;Course Overview&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;Scientific Visualization&lt;/strong&gt; course provides an in-depth exploration of techniques and tools used to visually analyze scientific data. Students gain hands-on experience implementing visualization algorithms using &lt;strong&gt;C++ and OpenGL&lt;/strong&gt;, while also exploring machine learning applications in visualization using &lt;strong&gt;Python&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;topics-covered&#34;&gt;Topics Covered&lt;/h2&gt;
&lt;p&gt;Throughout the semester, we covered key topics in scientific visualization, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scalar &amp;amp; Surface Visualization&lt;/strong&gt;: Techniques such as contouring, color mapping, and isosurfaces.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Volumetric Visualization&lt;/strong&gt;: Direct volume rendering, transfer functions, and raycasting.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vector Visualization&lt;/strong&gt;: Glyph-based, streamline, and LIC (Line Integral Convolution) methods.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tensor Visualization&lt;/strong&gt;: Diffusion tensor imaging, eigenvector-based methods, and tensor glyphs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Information Visualization&lt;/strong&gt;: Data representation, interaction, and high-dimensional data visualization.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visual Analytics &amp;amp; Advanced Topics&lt;/strong&gt;: Integrating visualization with AI/ML, interactive exploration, and large-scale data visualization.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;programming--assignments&#34;&gt;Programming &amp;amp; Assignments&lt;/h2&gt;
&lt;p&gt;Students implemented visualization techniques using &lt;strong&gt;C++ and OpenGL&lt;/strong&gt;, gaining low-level control over rendering and graphical computations. In addition, I introduced &lt;strong&gt;machine learning-based visualization assignments&lt;/strong&gt; in &lt;strong&gt;Python&lt;/strong&gt;, utilizing frameworks like &lt;strong&gt;PyTorch&lt;/strong&gt; and &lt;strong&gt;OpenCV&lt;/strong&gt; to explore AI-driven visualization methods.&lt;/p&gt;
&lt;h2 id=&#34;course-materials&#34;&gt;Course Materials&lt;/h2&gt;
&lt;p&gt;Lecture slides, assignments, and resources are available on the course webpage.&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
  </channel>
</rss>
